program_follows = ["$"]
declaration_list_follows = ["ID", ";", "NUM", "(", "{", "}", "break", "if", "for", "return", "+", "-", "$"]
declaration_follows = ["ID", ";", "NUM", "(", "int", "void", "{", "}", "break", "if", "for", "return", "+", "-", "$"]
declaration_initial_follows = [";", "[", "(", ")", ","]
declaration_prime_follows = ["ID", ";", "NUM", "(", "int", "void", "{", "}", "break", "if", "for", "return", "+", "-",
                             "$"]
var_declaration_prime_follows = ["ID", ";", "NUM", "(", "int", "void", "{", "}", "break", "if", "for", "return", "+",
                                 "-",
                                 "$"]
fun_declaration_prime_follows = ["ID", ";", "NUM", "(", "int", "void", "{", "}", "break", "if", "for", "return", "+",
                                 "-",
                                 "$"]
type_specifier_follows = ["ID"]
params_follows = [")"]
param_list_follows = [")"]
param_follows = [")", ","]
param_prime_follows = [")", ","]
compound_stmt_follows = ["ID", ";", "NUM", "(", "int", "void", "{", "}", "break", "if", "endif", "else", "for",
                         "return", "+",
                         "-", "$"]
statement_list_follows = ["}"]
statement_follows = ["ID", ";", "NUM", "(", "{", "}", "break", "if", "endif", "else", "for", "return", "+", "-"]
expression_stmt_follows = ["ID", ";", "NUM", "(", "{", "}", "break", "if", "endif", "else", "for", "return", "+", "-"]
selection_stmt_follows = ["ID", ";", "NUM", "(", "{", "}", "break", "if", "endif", "else", "for", "return", "+", "-"]
else_stmt_follows = ["ID", ";", "NUM", "(", "{", "}", "break", "if", "endif", "else", "for", "return", "+", "-"]
iteration_stmt_follows = ["ID", ";", "NUM", "(", "{", "}", "break", "if", "endif", "else", "for", "return", "+", "-"]
return_stmt_follows = ["ID", ";", "NUM", "(", "{", "}", "break", "if", "endif", "else", "for", "return", "+", "-"]
return_stmt_prime_follows = ["ID", ";", "NUM", "(", "{", "}", "break", "if", "endif", "else", "for", "return", "+", "-"]
expression_follows = [";", "]", ")", ","]
b_follows = [";", "]", ")", ","]
h_follows = [";", "]", ")", ","]
simple_expression_zegond_follows = [";", "]", ")", ","]
simple_expression_prime_follows = [";", "]", ")", ","]
c_follows = [";", "]", ")", ","]
relop_follows = ["ID", "NUM", "(", "+", "-"]
additive_expression_follows = [";", "]", ")", ","]
additive_expression_prime_follows = [";", "]", ")", ",", "<", "=="]
additive_expression_zegond_follows = [";", "]", ")", ",", "<", "=="]
d_follows = [";", "]", ")", ",", "<", "=="]
addop_follows = ["ID", "NUM", "(", "+", "-"]
term_follows = [";", "]", ")", ",", "<", "==", "+", "-"]
term_prime_follows = [";", "]", ")", ",", "<", "==", "+", "-"]
term_zegond_follows = [";", "]", ")", ",", "<", "==", "+", "-"]
g_follows = [";", "]", ")", ",", "<", "==", "+", "-"]
signed_factor_follows = [";", "]", ")", ",", "<", "==", "+", "-", "*"]
signed_factor_prime_follows = [";", "]", ")", ",", "<", "==", "+", "-", "*"]
signed_factor_zegond_follows = [";", "]", ")", ",", "<", "==", "+", "-", "*"]
factor_follows = [";", "]", ")", ",", "<", "==", "+", "-", "*"]
var_call_prime_follows = [";", "]", ")", ",", "<", "==", "+", "-", "*"]
var_prime_follows = [";", "]", ")", ",", "<", "==", "+", "-", "*"]
factor_prime_follows = [";", "]", ")", ",", "<", "==", "+", "-", "*"]
factor_zegond_follows = [";", "]", ")", ",", "<", "==", "+", "-", "*"]
args_follows = [")"]
arg_list_follows = [")"]
arg_list_prime_follows = [")"]
